name: "â–¶ Package and Deploy Sandbox"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'roc-roofing/VERSION.txt'
    types:
      - opened
      - reopened
      - synchronized

env:
  AWS_DEFAULT_REGION: us-west-2
  KUBECONFIG: ${{ github.workspace }}/infrastructure/.kube/config

concurrency:
  group: ${{ github.ref }}-${{ github.event_name }}-rocroofing-sandbox
  cancel-in-progress: true

jobs:
  # TODO: Check if release already exists (version file not properly changed?)
  release:
    name: "Draft Github Release"
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      - name: Compute Version
        id: version
        run: echo "::set-output name=version::$(cat roc-roofing/VERSION.txt)"
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          name: "roc-roofing ${{ steps.version.outputs.version }}"
          tag: "rocroofing-${{ steps.version.outputs.version }}"
          version: "rocroofing-${{ steps.version.outputs.version }}"
          publish: false
          commitish: refs/heads/main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: "Package Docker Container"
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      - name: Compute Version
        id: version
        run: echo "::set-output name=version::$(cat roc-roofing/VERSION.txt)"
      - name: Compute Docker Tag
        id: dockerTag
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-roc-roofing
          restore-keys: |
            ${{ runner.os }}-buildx-roc-roofing-
      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # And make it available for the builds
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}/roc-roofing
          file: ${{ github.workspace }}/roc-roofing/Dockerfile
          push: true
          tags: "ghcr.io/dommartinez/roc-roofing/rocroofing:${{ steps.dockerTag.outputs.sha_short }},ghcr.io/dommartinez/roc-roofing/rocroofing:${{ steps.version.outputs.version }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896

  deploy:
    name: "Deploy Sandbox"
    runs-on: ubuntu-20.04
    needs: [publish]
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      - name: Compute Docker Tag
        id: dockerTag
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Install aws-iam-authenticator
        run: brew install aws-iam-authenticator
      - name: Assume necessary role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.KUBE_ROLE_AWS_KEY }}
          aws-secret-access-key: ${{ secrets.KUBE_ROLE_AWS_SECRET}}
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::198847000385:role/kube_admin
          role-duration-seconds: 1200
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.8.0
      - name: Deploy HELMFILE
        run: |
          kubectl config use-context cluster-us-west-2
          helmfile --file infrastructure/kubernetes/cluster-us-west-2.yaml \
            --state-values-set version="${{ steps.dockerTag.outputs.sha_short }}" \
            --state-values-set releaseName="rocroofing-sandbox" \
            --state-values-set namespace="ocdhomes" \
            --state-values-set irsa="rocroofing-prod-irsa" \
            --state-values-set hostname="sandbox.rocroofingfl.com" \
            deps
          helmfile --file infrastructure/kubernetes/cluster-us-west-2.yaml \
            --state-values-set version="${{ steps.dockerTag.outputs.sha_short }}" \
            --state-values-set releaseName="rocroofing-sandbox" \
            --state-values-set namespace="ocdhomes" \
            --state-values-set irsa="rocroofing-prod-irsa" \
            --state-values-set hostname="sandbox.rocroofingfl.com" \
            apply

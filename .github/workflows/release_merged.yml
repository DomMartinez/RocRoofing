name: "â–¶ Deploy Release"

on:
  workflow_dispatch:
  push:
    tags:
      - 'rocroofing-*'

env:
  AWS_DEFAULT_REGION: us-west-2
  KUBECONFIG: ${{ github.workspace }}/infrastructure/.kube/config

concurrency:
  group: ${{ github.ref }}-${{ github.event_name }}-rocroofing-deploy
  cancel-in-progress: true

jobs:
  release:
    name: "Publish Github Release"
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      - name: Compute Version
        id: version
        run: echo "::set-output name=version::$(cat roc-roofing/VERSION.txt)"
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          name: "roc-roofing ${{ steps.version.outputs.version }}"
          tag: "rocroofing-${{ steps.version.outputs.version }}"
          version: "rocroofing-${{ steps.version.outputs.version }}"
          publish: true
          commitish: refs/heads/main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: "Deploy Release"
    needs: [release]
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      - name: Compute Version
        id: version
        run: echo "::set-output name=version::$(cat roc-roofing/VERSION.txt)"
      - name: Install aws-iam-authenticator
        run: brew install aws-iam-authenticator
      - name: Assume necessary role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.KUBE_ROLE_AWS_KEY }}
          aws-secret-access-key: ${{ secrets.KUBE_ROLE_AWS_SECRET}}
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::198847000385:role/kube_admin
          role-duration-seconds: 1200
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.8.0
      - name: Deploy HELMFILE
        run: |
          kubectl config use-context cluster-us-west-2
          helmfile --file infrastructure/kubernetes/cluster-us-west-2.yaml \
            --state-values-set version="${{ steps.version.outputs.version }}" deps
          helmfile --file infrastructure/kubernetes/cluster-us-west-2.yaml \
            --state-values-set version="${{ steps.version.outputs.version }}" apply
